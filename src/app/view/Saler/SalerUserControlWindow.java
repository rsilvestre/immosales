/*
 * Copyright (c) 2013. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

package app.view.Saler;

import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import app.App;
import app.model.DB.immo.Offer;
import app.model.DB.product.Bien;
import app.model.Saler.SalerModel;
import app.view.bien.BienSalerWindow;
import app.view.offer.OfferDialogWindow;

import javax.swing.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

/**
 * Created by michaelsilvestre on 12/06/13.
 */
public class SalerUserControlWindow extends JPanel {
	private JPanel panel1;
	private JList bienList;
	private JList offerList;

	private DefaultListModel bienListModel;
	private DefaultListModel offerListModel;

	private JComboBox cOfferList;
	private JComboBox cBienList;

	private SalerUserControlWindow salerUserControlWindow = this;

	private SalerModel salerModel;

	public SalerUserControlWindow(SalerModel salerModel) {
		this.salerModel = salerModel;
		this.add(panel1);
		initComponents();
		addListener();
		populateLocal();
	}

	private void initComponents() {
		bienListModel = new DefaultListModel();
		bienList.setModel(bienListModel);

		offerListModel = new DefaultListModel();
		offerList.setModel(offerListModel);

	}

	private void addListener() {
		bienList.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				if (evt.getClickCount() == 2) {
					showDetails((ListObject) bienList.getSelectedValue());
				}
			}
		});
		offerList.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				if (evt.getClickCount() == 2) {
					showDetails((ListObject) offerList.getSelectedValue());
				}
			}
		});
	}

	private void showDetails(ListObject selectedValue) {
		if (selectedValue.getType() == ListObject.ListObjectType.BIEN) {
			showBienDetail(selectedValue);
			return;
		} else if (selectedValue.getType() == ListObject.ListObjectType.OFFER) {
			showOfferDetail(selectedValue);
			return;
		}
		JOptionPane.showMessageDialog(salerUserControlWindow, "Pas d'action sur : " + selectedValue.getId() + " | " + selectedValue.toString());
	}

	private void showBienDetail(ListObject selectedValue) {
		Bien bien = App.em.load(Bien.class, selectedValue.getId());
		BienSalerWindow bienSalerWindow = new BienSalerWindow(bien);
		bienSalerWindow.pack();
		bienSalerWindow.setVisible(true);
		if (bienSalerWindow.getValidate() && !bien.getStatus().equals(bienSalerWindow.getBienStatus().toString())) {
			bien.setStatus(bienSalerWindow.getBienStatus().toString());
			App.em.update(bien);
			bienListModel.setElementAt(getBienList(bien), bienListModel.indexOf(selectedValue));
		}

	}

	private void showOfferDetail(ListObject selectedValue) {
		Offer offer = App.em.load(Offer.class, selectedValue.getId());
		OfferDialogWindow offerDialogWindow = new OfferDialogWindow(offer);
		offerDialogWindow.pack();
		offerDialogWindow.setVisible(true);
		if (offerDialogWindow.getValidate() && !offer.getStatus().equals(offerDialogWindow.getOfferStatus().toString())) {
			offer.setStatus(offerDialogWindow.getOfferStatus().toString());
			App.em.update(offer);
			offerListModel.setElementAt(getOfferList(offer), offerListModel.indexOf(selectedValue));
		}
	}

	private void populateLocal() {
		List<Bien> biens = App.em.find(Bien.class, "where 1=1");
		List<Offer> offers = App.em.find(Offer.class, "where 1=1");
		for (Bien bien : biens) {
			bienListModel.addElement(getBienList(bien));
		}
		for (Offer offer : offers) {
			offerListModel.addElement(getOfferList(offer));
		}
		cBienList.addItem("");
		for (Bien.BienStatus bienStatus : Bien.BienStatus.values()) {
			cBienList.addItem(bienStatus.toString());
		}
		cOfferList.addItem("");
		for (Offer.OfferStatus offerStatus : Offer.OfferStatus.values()) {
			cOfferList.addItem(offerStatus.toString());
		}
	}

	private ListObject getBienList(Bien bien) {
		return new ListObject(ListObject.ListObjectType.BIEN, bien.getId(), bien.getName() + " " + bien.getPrice() + " " + bien.getStatus());
	}

	private ListObject getOfferList(Offer offer) {
		return new ListObject(ListObject.ListObjectType.OFFER, offer.getId(), offer.getBien().getName() + " " + offer.getOffer() + " " + offer.getStatus());
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		panel1 = new JPanel();
		panel1.setLayout(new FormLayout("fill:640px:grow", "center:max(d;4px):noGrow,top:3dlu:noGrow,center:d:grow"));
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
		CellConstraints cc = new CellConstraints();
		panel1.add(panel2, cc.xy(1, 3));
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:d:grow", "center:d:grow,top:3dlu:noGrow,center:max(d;4px):noGrow"));
		panel1.add(panel3, cc.xy(1, 1));
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new FormLayout("fill:d:grow", "center:d:grow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:350px:grow"));
		panel3.add(panel4, cc.xy(1, 3));
		cBienList = new JComboBox();
		panel4.add(cBienList, cc.xy(1, 3));
		final JPanel panel5 = new JPanel();
		panel5.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:d:grow", "center:d:grow"));
		panel4.add(panel5, cc.xy(1, 1));
		final JLabel label1 = new JLabel();
		label1.setText("Biens");
		panel5.add(label1, cc.xy(3, 1));
		final Spacer spacer1 = new Spacer();
		panel5.add(spacer1, cc.xy(1, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		final Spacer spacer2 = new Spacer();
		panel5.add(spacer2, cc.xy(5, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JScrollPane scrollPane1 = new JScrollPane();
		panel4.add(scrollPane1, cc.xy(1, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
		bienList = new JList();
		scrollPane1.setViewportView(bienList);
		final JPanel panel6 = new JPanel();
		panel6.setLayout(new FormLayout("fill:d:grow", "center:d:grow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:350px:grow"));
		panel3.add(panel6, cc.xy(3, 3));
		cOfferList = new JComboBox();
		panel6.add(cOfferList, cc.xy(1, 3));
		final JPanel panel7 = new JPanel();
		panel7.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:d:grow", "center:d:grow"));
		panel6.add(panel7, cc.xy(1, 1));
		final JLabel label2 = new JLabel();
		label2.setText("Offres");
		panel7.add(label2, cc.xy(3, 1));
		final Spacer spacer3 = new Spacer();
		panel7.add(spacer3, cc.xy(1, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		final Spacer spacer4 = new Spacer();
		panel7.add(spacer4, cc.xy(5, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JScrollPane scrollPane2 = new JScrollPane();
		panel6.add(scrollPane2, cc.xy(1, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
		offerList = new JList();
		scrollPane2.setViewportView(offerList);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return panel1;
	}

	private static class ListObject {

		public enum ListObjectType {BIEN, OFFER}

		private Long id;
		private String row;
		private ListObjectType type;

		public ListObject(ListObjectType type, Long id, String row) {
			this.type = type;
			this.id = id;
			this.row = row;
		}

		public ListObjectType getType() {
			return type;
		}

		public Long getId() {
			return id;
		}

		@Override
		public String toString() {
			return row;
		}

	}


}
