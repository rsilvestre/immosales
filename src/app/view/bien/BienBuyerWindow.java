/*
 * Copyright (c) 2013. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

package app.view.bien;

import app.model.DB.product.Images;
import app.view.base.IBuyerBusinessWindow;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import app.model.DB.product.Bien;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;

public class BienBuyerWindow extends JDialog implements IBuyerBusinessWindow {
	protected JPanel contentPane;
	protected JButton buttonOK;
	protected JButton buttonCancel;
	protected JPanel panel1;
	protected JTextField tId;
	protected JTextField tOwner;
	protected JTextField tName;
	protected JTextArea tDescription;
	protected JTextArea tAddress;
	protected JTextField tPrice;
	protected JTextField tYearConstruction;
	protected JTextField tFaceWide;
	protected JTextField tFaceNumber;
	protected JTextField tFloorNumber;
	protected JTextField tCpeb;

	private JPanel imageContainer;
	private JTextField tBienType;

	private JLabel picLabel;

	private boolean validate = false;

	public BienBuyerWindow() {
		initComponents();
	}

	public BienBuyerWindow(Bien bien) {
		initComponents();
		initComponentsLocal();
		setDefaultValue(bien);
		setDefaultValueLocal(bien);
	}

	private void initComponentsLocal() {
		picLabel = new JLabel();
		imageContainer.add(picLabel, BorderLayout.CENTER);
	}

	private void setDefaultValueLocal(Bien bien) {
		for (Images image : bien.getImages()) {
			if (image != null) {
				File file = new File("ressources/images/biens/" + bien.getId() + "/" + image.getImageName());
				try {
					addImage(file.toURL());
				} catch (MalformedURLException e) {
					e.printStackTrace();
				}
				return;
			}
		}
	}

	private void addImage(URL url) {
		try {
			picLabel.setIcon(getImageResized(new ImageIcon(ImageIO.read(url))));
			imageContainer.repaint();
			BienBuyerWindow.this.repaint();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private Icon getImageResized(ImageIcon img) {
		int width = img.getIconWidth() * (400) / img.getIconHeight();
		int height = 400;
		return new ImageIcon(img.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH));
	}

	private void initComponents() {
		setContentPane(contentPane);
		setModal(true);
		getRootPane().setDefaultButton(buttonOK);

		buttonOK.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				onOK();
			}
		});

		buttonCancel.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				onCancel();
			}
		});

		setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				onCancel();
			}
		});

		contentPane.registerKeyboardAction(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				onCancel();
			}
		}, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	}

	private void setDefaultValue(Bien bien) {
		tId.setText(bien.getId().toString());
		tBienType.setText(bien.getTypeProduct());
		tOwner.setText(bien.getOwner().toString());
		tName.setText(bien.getName());
		tAddress.setText(bien.getAddress());
		tDescription.setText(bien.getDescription());
		tPrice.setText(bien.getPrice().toString());
		tYearConstruction.setText(bien.getYearConstruction().toString());
		tFaceWide.setText(bien.getFaceWide().toString());
		tFaceNumber.setText(bien.getnFrontage().toString());
		tFloorNumber.setText(bien.getnFloor().toString());
		tCpeb.setText(bien.getCpeb());
	}

	private void onOK() {
		validate = true;
		dispose();
	}

	private void onCancel() {
		dispose();
	}

	public boolean getValidate() {
		return validate;
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		contentPane = new JPanel();
		contentPane.setLayout(new GridLayoutManager(2, 1, new Insets(10, 10, 10, 10), -1, -1));
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
		contentPane.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		panel1 = new JPanel();
		panel1.setLayout(new FormLayout("fill:168px:grow,left:4dlu:noGrow,fill:325px:grow", "center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:72px:noGrow,top:3dlu:noGrow,center:94px:noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow"));
		panel2.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label1 = new JLabel();
		label1.setText("Id");
		CellConstraints cc = new CellConstraints();
		panel1.add(label1, cc.xy(1, 1));
		final JLabel label2 = new JLabel();
		label2.setText("Propriétaire");
		panel1.add(label2, cc.xy(1, 3));
		tId = new JTextField();
		tId.setEditable(false);
		panel1.add(tId, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		tOwner = new JTextField();
		tOwner.setEditable(false);
		panel1.add(tOwner, cc.xy(3, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JLabel label3 = new JLabel();
		label3.setText("Nom du bien");
		panel1.add(label3, cc.xy(1, 7));
		tName = new JTextField();
		tName.setEditable(false);
		panel1.add(tName, cc.xy(3, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JLabel label4 = new JLabel();
		label4.setText("Description");
		panel1.add(label4, cc.xy(1, 9));
		final JScrollPane scrollPane1 = new JScrollPane();
		scrollPane1.setHorizontalScrollBarPolicy(30);
		scrollPane1.setVerticalScrollBarPolicy(20);
		panel1.add(scrollPane1, cc.xy(3, 9, CellConstraints.FILL, CellConstraints.FILL));
		scrollPane1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
		tDescription = new JTextArea();
		tDescription.setColumns(20);
		tDescription.setEditable(false);
		tDescription.setLineWrap(true);
		tDescription.setWrapStyleWord(true);
		scrollPane1.setViewportView(tDescription);
		final JLabel label5 = new JLabel();
		label5.setText("Adresse");
		panel1.add(label5, cc.xy(1, 11));
		final JScrollPane scrollPane2 = new JScrollPane();
		panel1.add(scrollPane2, cc.xy(3, 11, CellConstraints.FILL, CellConstraints.FILL));
		scrollPane2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
		tAddress = new JTextArea();
		tAddress.setEditable(false);
		tAddress.setLineWrap(true);
		tAddress.setWrapStyleWord(true);
		scrollPane2.setViewportView(tAddress);
		final JLabel label6 = new JLabel();
		label6.setText("Prix");
		panel1.add(label6, cc.xy(1, 13));
		tPrice = new JTextField();
		tPrice.setEditable(false);
		panel1.add(tPrice, cc.xy(3, 13, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JLabel label7 = new JLabel();
		label7.setText("Année de construction");
		panel1.add(label7, cc.xy(1, 15));
		final JLabel label8 = new JLabel();
		label8.setText("Taille de la façade");
		panel1.add(label8, cc.xy(1, 17));
		final JLabel label9 = new JLabel();
		label9.setText("Nombre de façade");
		panel1.add(label9, cc.xy(1, 19));
		final JLabel label10 = new JLabel();
		label10.setText("Nombre d'étage");
		panel1.add(label10, cc.xy(1, 21));
		final JLabel label11 = new JLabel();
		label11.setText("CPEB");
		panel1.add(label11, cc.xy(1, 23));
		tYearConstruction = new JTextField();
		tYearConstruction.setEditable(false);
		panel1.add(tYearConstruction, cc.xy(3, 15, CellConstraints.FILL, CellConstraints.DEFAULT));
		tFaceWide = new JTextField();
		tFaceWide.setEditable(false);
		panel1.add(tFaceWide, cc.xy(3, 17, CellConstraints.FILL, CellConstraints.DEFAULT));
		tFaceNumber = new JTextField();
		tFaceNumber.setEditable(false);
		panel1.add(tFaceNumber, cc.xy(3, 19, CellConstraints.FILL, CellConstraints.DEFAULT));
		tFloorNumber = new JTextField();
		tFloorNumber.setEditable(false);
		panel1.add(tFloorNumber, cc.xy(3, 21, CellConstraints.FILL, CellConstraints.DEFAULT));
		tCpeb = new JTextField();
		tCpeb.setEditable(false);
		panel1.add(tCpeb, cc.xy(3, 23, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JLabel label12 = new JLabel();
		label12.setText("Type");
		panel1.add(label12, cc.xy(1, 5));
		tBienType = new JTextField();
		tBienType.setEditable(false);
		panel1.add(tBienType, cc.xy(3, 5, CellConstraints.FILL, CellConstraints.DEFAULT));
		imageContainer = new JPanel();
		imageContainer.setLayout(new BorderLayout(0, 0));
		panel2.add(imageContainer, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
		panel2.add(panel3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
		final Spacer spacer1 = new Spacer();
		panel3.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1, true, false));
		panel3.add(panel4, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		buttonOK = new JButton();
		buttonOK.setText("OK");
		panel4.add(buttonOK, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		buttonCancel = new JButton();
		buttonCancel.setText("Cancel");
		panel4.add(buttonCancel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return contentPane;
	}
}
