/*
 * Copyright (c) 2013. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

package mvc.view.buyer;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import mvc.App;
import mvc.controller.buyer.FindBienDbEvent;
import mvc.model.DB.product.Bien;
import mvc.model.buyer.FindBienModel;

import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;

/**
 * Created by michaelsilvestre on 20/05/13.
 */
public class FindBienWindow extends JDialog {
	private JPanel panel1;
	private JTextField villeTextField;
	private JTextField CPTextField1;
	private JTextField textField3;
	private JButton button1;
	private JComboBox typeComboBox;
	private JTable table1;

	private String[] colomnHead = {"Ref", "Nom", "Ville", "Prix", "Détail"};
	private DefaultTableModel defaultTableModel;

	private FindBienModel findBienModel;

	public FindBienWindow(FindBienModel findBienModel) {
		this.findBienModel = findBienModel;
		this.add(panel1);

		initComponents();
		linkModel();
		addListener();
		populateLocal();
	}

	private void initComponents() {
		defaultTableModel = new DefaultTableModel(colomnHead, 0);
		table1.setModel(defaultTableModel);
	}

	private void linkModel() {

		findBienModel.addPropertyChangeListener(new PropertyChangeListener() {
			@Override
			public void propertyChange(PropertyChangeEvent evt) {
				String name = evt.getPropertyName();

				if (name.contains("listBiens")) {
					rebuildTableModel((List<Bien>) evt.getNewValue());
				}
			}
		});
	}

	private void rebuildTableModel(List<Bien> listBiens) {
		for (int index = defaultTableModel.getRowCount() - 1; index >= 0; --index) {
			defaultTableModel.removeRow(index);
		}
		for (Bien bien : listBiens) {
			defaultTableModel.addRow(new String[]{bien.getId().toString(), bien.getName(), bien.getCity(), bien.getPrice().toString(), "Detail"});
		}
		table1.revalidate();
		table1.repaint();
	}

	private void addListener() {
		villeTextField.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent keyEvent) {
			}

			@Override
			public void keyPressed(KeyEvent keyEvent) {

			}

			@Override
			public void keyReleased(KeyEvent keyEvent) {
				FindBienDbEvent event = new FindBienDbEvent(villeTextField.getText(), CPTextField1.getText(), (String) typeComboBox.getItemAt(typeComboBox.getSelectedIndex()), findBienModel);
				event.dispatch();

			}
		});
		CPTextField1.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent keyEvent) {

			}

			@Override
			public void keyPressed(KeyEvent keyEvent) {

			}

			@Override
			public void keyReleased(KeyEvent keyEvent) {
				FindBienDbEvent event = new FindBienDbEvent(villeTextField.getText(), CPTextField1.getText(), (String) typeComboBox.getItemAt(typeComboBox.getSelectedIndex()), findBienModel);
				event.dispatch();
			}
		});
		typeComboBox.addItemListener(new ItemListener() {
			@Override
			public void itemStateChanged(ItemEvent itemEvent) {
				FindBienDbEvent event = new FindBienDbEvent(villeTextField.getText(), CPTextField1.getText(), (String) typeComboBox.getItemAt(typeComboBox.getSelectedIndex()), findBienModel);
				event.dispatch();
			}
		});
		table1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent evt) {
				if (evt.getClickCount() == 1) {
					JTable target = (JTable) evt.getSource();
					//setSelectedPerson(getAPersonSelected(target.getSelectedRow()));
					if (target.getSelectedColumn()== 4) {
						editRow(target);
					}
				}
			}
		});
	}

	private void editRow(JTable target) {

	}

	private void populateLocal() {
		for (Bien.TypeProduct typeProduct : Bien.TypeProduct.values()) {
			typeComboBox.addItem(typeProduct.toString());
		}
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		panel1 = new JPanel();
		panel1.setLayout(new FormLayout("fill:d:noGrow", "center:max(d;4px):noGrow"));
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new FormLayout("fill:d:noGrow", "center:d:noGrow,top:3dlu:noGrow,center:d:grow"));
		CellConstraints cc = new CellConstraints();
		panel1.add(panel2, cc.xy(1, 1));
		panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new FormLayout("fill:450px:noGrow", "center:d:noGrow"));
		panel2.add(panel3, cc.xy(1, 1));
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow"));
		panel3.add(panel4, cc.xy(1, 1));
		final JPanel panel5 = new JPanel();
		panel5.setLayout(new FormLayout("fill:357px:noGrow", "center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;4px):noGrow"));
		panel4.add(panel5, cc.xy(1, 1));
		final JPanel panel6 = new JPanel();
		panel6.setLayout(new FormLayout("fill:d:noGrow,left:4dlu:noGrow,fill:153px:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow"));
		panel5.add(panel6, cc.xy(1, 1));
		final JLabel label1 = new JLabel();
		label1.setText("Ville");
		panel6.add(label1, cc.xy(1, 1));
		villeTextField = new JTextField();
		panel6.add(villeTextField, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JPanel panel7 = new JPanel();
		panel7.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:122px:noGrow", "center:max(d;4px):noGrow"));
		panel6.add(panel7, cc.xy(5, 1));
		typeComboBox = new JComboBox();
		panel7.add(typeComboBox, cc.xy(3, 1));
		final JLabel label2 = new JLabel();
		label2.setText("Type");
		panel7.add(label2, cc.xy(1, 1));
		final JPanel panel8 = new JPanel();
		panel8.setLayout(new FormLayout("fill:d:noGrow,left:9dlu:noGrow,fill:100px:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow"));
		panel5.add(panel8, cc.xy(1, 3));
		final JLabel label3 = new JLabel();
		label3.setText("CP");
		panel8.add(label3, cc.xy(1, 1));
		CPTextField1 = new JTextField();
		panel8.add(CPTextField1, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JPanel panel9 = new JPanel();
		panel9.setLayout(new FormLayout("fill:d:noGrow,left:4dlu:noGrow,fill:179px:grow", "center:d:noGrow"));
		panel8.add(panel9, cc.xy(5, 1));
		final JLabel label4 = new JLabel();
		label4.setText("Ville");
		panel9.add(label4, cc.xy(1, 1));
		textField3 = new JTextField();
		panel9.add(textField3, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
		final JPanel panel10 = new JPanel();
		panel10.setLayout(new FormLayout("fill:d:grow", "center:d:grow,top:3dlu:noGrow,center:max(d;4px):noGrow"));
		panel4.add(panel10, cc.xy(3, 1));
		button1 = new JButton();
		button1.setText("Button");
		panel10.add(button1, cc.xy(1, 3));
		final JScrollPane scrollPane1 = new JScrollPane();
		panel2.add(scrollPane1, cc.xy(1, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
		table1 = new JTable();
		scrollPane1.setViewportView(table1);
		label1.setLabelFor(villeTextField);
		label2.setLabelFor(typeComboBox);
		label3.setLabelFor(CPTextField1);
		label4.setLabelFor(textField3);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return panel1;
	}
}

